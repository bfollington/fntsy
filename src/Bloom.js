/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF, OrthographicCamera } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import fonts from "./fonts/fonts";

export default function Model(props) {
  const [t, setT] = useState(0);

  const colors = ["#d95763", "#df7126", "#37946e", "#5b6ee1", "#76428a"];

  useFrame(({ clock }) => {
    setT(clock.elapsedTime / 10.0);
  });

  const group = useRef();
  const { nodes, materials } = useGLTF("/bloom.gltf");
  return (
    <group ref={group} {...props} dispose={null}>
      <OrthographicCamera
        makeDefault={false}
        far={50000}
        near={-50000}
        position={[576, 576, 576]}
        rotation={[-Math.PI / 4, 0.62, Math.PI / 6]}
      >
        <directionalLight
          intensity={0.75}
          decay={2}
          position={[850000, 1300000, 1000000]}
          rotation={[0, 0, 0]}
        />
      </OrthographicCamera>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus_Knot.geometry}
        material={nodes.Torus_Knot.material}
        position={[0, 0, 0]}
        rotation={[
          2 * Math.PI * Math.sin(t),
          2 * Math.PI * Math.cos(t * 2),
          2 * Math.PI * Math.atan(t)
        ]}
        scale={[
          0.5 + 0.25 * Math.sin(t),
          0.5 + 0.25 * Math.cos(t),
          0.5 + 0.25 * Math.sin(t)
        ]}
      />
    </group>
  );
}

useGLTF.preload("/bloom.gltf");
